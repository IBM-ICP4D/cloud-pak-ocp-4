# {{ ansible_managed }}

apiVersion: v1
baseDomain: {{ domain_name }}
{% if http_proxy is defined %}
proxy:
  httpProxy: {{http_proxy}}
  httpsProxy: {{https_proxy}}
  noProxy: {{no_proxy}}
{% endif %}
compute:
- hyperthreading: Enabled
  name: worker
{% if rhcos_installation_method|upper!="IPI" %}
  replicas: 0
{% else %}
  replicas: {{vm_number_of_workers}}
  platform:
    vsphere:
      cpus: {{vm_worker_cpu}}
      coresPerSocket: 2
      memoryMB: {{vm_worker_mem}}
      osDisk:
        diskSizeGB: {{vm_worker_disk}}
{% endif %}
controlPlane:
  hyperthreading: Enabled
  name: master
{% if rhcos_installation_method|upper!="IPI" %}
  replicas: 3
{% else %}
  replicas: {{vm_number_of_masters}}
  platform:
    vsphere:
      cpus: {{vm_master_cpu}}
      coresPerSocket: 2
      memoryMB: {{vm_master_mem}}
      osDisk:
        diskSizeGB: {{vm_master_disk}}
{% endif %}  
metadata:
  name: {{ cluster_name }}
platform:
{% if rhcos_installation_method|upper!="IPI" %}
  none: {}
{% else %}
  vsphere:
    apiVIP: {{apiVIP}}
    ingressVIP: {{ingressVIP}}
    cluster: {{vc_cluster}}
    datacenter: {{vc_datacenter}}
    defaultDatastore: {{vc_datastore}}
    network: {{vc_network}}
    username: {{vc_user}}
    password: {{vc_password}}
    vCenter: {{vc_vcenter}}
    folder: /{{vc_datacenter}}/vm/{{vc_folder}}
{% endif %}
{% if service_network is defined %}
networking:
  serviceNetwork:
  - {{ service_network }}
{% endif %}
pullSecret: '{{ pull_secret['content'] | b64decode | trim }}'
sshKey: '{{ ssh_key['content'] | b64decode | trim }}'
{% if air_gapped_install is defined and air_gapped_install %}
additionalTrustBundle: |
{{ lookup('file', air_gapped_registry_trust_bundle_file) | indent(2,true) }}
imageContentSources:
- mirrors:
  - {{air_gapped_mirror_ocp_release}}
  source: {{air_gapped_source_ocp_release}}
- mirrors:
  - {{air_gapped_mirror_ocp_release_dev}}
  source: {{air_gapped_source_ocp_release_dev}}
{% endif %}
