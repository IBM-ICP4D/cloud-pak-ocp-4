---

- name: Create OpenShift ignition manifests
  shell: |
    {{ocp_install_dir}}/openshift-install create manifests --dir={{ocp_install_dir}}
  when: rhcos_installation_method|upper!="IPI"

- name: Create OpenShift cluster
  shell: |
    {{ocp_install_dir}}/openshift-install create cluster --dir={{ocp_install_dir}}
  when: rhcos_installation_method|upper=="IPI"

- name: Make masters unschedulable
  lineinfile:
    path: "{{ocp_install_dir}}/manifests/cluster-scheduler-02-config.yml"
    regex: "  mastersSchedulable: true"
    line: "  mastersSchedulable: false"
  when: rhcos_installation_method|upper!="IPI"

- name: To check, keep copy of cluster-scheduler-02-config.yml in /tmp
  copy:
    src: "{{ocp_install_dir}}/manifests/cluster-scheduler-02-config.yml"
    dest: /tmp/cluster-scheduler-02-config.yml
  when: rhcos_installation_method|upper!="IPI"

- name: Get the chrony client configuration
  slurp:
    src: "{{ocp_install_dir}}/chrony_client.conf"
  register: chrony_client_conf
  when: rhcos_installation_method|upper!="IPI"

- name: Create Machine Config for chrony
  template:
    src: ocp_ignition_chrony.j2
    dest: "{{ocp_install_dir}}/openshift/40_{{item}}s_ocp_chrony_configuration.yaml"
    owner: root
    group: root
    mode: 0644
  with_items:
    - "master"
    - "worker"
  vars:
    node_type: "{{item}}"
  when: override_chrony_settings_on_cluster_nodes|bool and rhcos_installation_method|upper!="IPI"

- name: Get the global proxy configuration (if defined)
  slurp:
    src: "/etc/profile.d/global_proxy.sh"
  register: global_proxy_conf
  when: configure_global_proxy is defined and configure_global_proxy==True and rhcos_installation_method|upper!="IPI"

- name: Create Machine Config for global proxy
  template:
    src: ocp_ignition_proxy.j2
    dest: "{{ocp_install_dir}}/openshift/40_{{item}}s_ocp_proxy_configuration.yaml"
    owner: root
    group: root
    mode: 0644
  with_items:
    - "master"
    - "worker"
  vars:
    node_type: "{{item}}"
  when: configure_global_proxy is defined and configure_global_proxy==True and rhcos_installation_method|upper!="IPI"

- name: Create OpenShift ignition configurations
  shell: |
    {{ocp_install_dir}}/openshift-install create ignition-configs --dir={{ocp_install_dir}}
  when: rhcos_installation_method|upper!="IPI"

- name: Change ignition files permissions
  file:
    path: "{{item}}"
    owner: root
    group: root
    mode: '0644'
  with_items:
    - "{{ocp_install_dir}}/bootstrap.ign"
    - "{{ocp_install_dir}}/master.ign"
    - "{{ocp_install_dir}}/worker.ign"
  when: rhcos_installation_method|upper!="IPI"

- name: Allow nginx to read ignition files (SELinux)
  sefcontext:
    target: '{{ ocp_install_dir }}/.*\.ign'
    setype: httpd_sys_content_t
    seuser: system_u
    ftype: a
    state: present
  when: ansible_selinux.status=='enabled' and rhcos_installation_method|upper!="IPI"

- name: Restore SELinux context for ignition files
  shell: restorecon -Rv "{{ocp_install_dir}}/*.ign"
  when: rhcos_installation_method|upper!="IPI"

- name: Generate base64 ignition files
  copy:
    content: "{{ lookup('file',item) | b64encode }}"
    dest: "{{item}}.64"
  with_items:
    - "{{ocp_install_dir}}/bootstrap.ign"
    - "{{ocp_install_dir}}/master.ign"
    - "{{ocp_install_dir}}/worker.ign"
  when: rhcos_installation_method|upper!="IPI"
