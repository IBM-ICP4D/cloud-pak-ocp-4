# {{ ansible_managed }}

defaults
    mode tcp
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms

frontend api
    bind *:6443
    mode tcp
    default_backend cpapi
{% if rhcos_installation_method|upper!="IPI" %}
frontend cfg
    bind *:22623
    mode tcp
    default_backend cpcfg
{% endif %}
frontend http
    bind *:80
    mode http
    default_backend wrkhttp
    stats uri /haproxy?stats
frontend https
    bind *:443
    mode tcp
    default_backend wrkhttps

backend cpapi
    balance roundrobin
{% if rhcos_installation_method|upper!="IPI" %}
    server bootstrap {{groups['bootstrap'][0]}}:6443 check
{% for host in groups['masters'] | sort %}
    server {{hostvars[host]['host']}} {{host}}:6443 check
{% endfor %}
{% else %}
    server masters {{apiVIP}}:6443 check
{% endif %}

{% if rhcos_installation_method|upper!="IPI" %}
backend cpcfg
    balance roundrobin
    server bootstrap {{groups['bootstrap'][0]}}:22623 check
{% for host in groups['masters'] | sort %}
    server {{hostvars[host]['host']}} {{host}}:22623 check
{% endfor %}
{% endif %}

backend wrkhttp
    mode http
    balance roundrobin
    option forwardfor
{% if rhcos_installation_method|upper!="IPI" %}
{% for host in groups['workers'] | sort %}
    server {{hostvars[host]['host']}} {{host}}:80 check
{% endfor %}
{% else %}
    server workers {{ingressVIP}}:80 check
{% endif %}

backend wrkhttps
    mode tcp
    balance roundrobin
{% if rhcos_installation_method|upper!="IPI" %}
{% for host in groups['workers'] | sort %}
    server {{hostvars[host]['host']}} {{host}}:443 check
{% endfor %}
{% else %}
    server workers {{ingressVIP}}:443 check
{% endif %}